import tkinter as tk
from tkinter import ttk as ttk
from tkinter import messagebox
#from tkintertable.Tables import TableCanvas
from tkintertable import TableCanvas, TableModel
import sqlite3 

#######################################################
# 
# Sitio.py
# Python implementation of the Class Sitio
# Generated by Enterprise Architect
# Created on:      22-mar.-2019 8:06:16
# Original author: acfde
# 
####################################################################################
#import Oferta
#import Inscripcion
import enumeradores
import LabelInput as li

class Sitio(tk.LabelFrame):
    """Clase para definir los sitios
    """
    #m_Oferta= Oferta()

    #m_Inscripcion= Inscripcion()

    #m_Lenguaje= Lenguaje()

    def __init__(self, raiz,url,lenguajes,tipositio,cantnivel):
        super(Sitio,self).__init__()
        self.configure(text='Edicion de Sitios',bg='gray')
        self.master=raiz

        self.url=url
        self.lenguajes=lenguajes # lista de lenguajes posibles
        self.cantnivel=cantnivel
        self.pack()
        self.frbut=tk.Frame(self,bg='yellow')
        self.pack(side=tk.LEFT)
        self.frbutidi =tk.LabelFrame(self,bg='blue',text='Idiomas')
        self.frbutidi.pack(side=tk.LEFT,fill=tk.Y)
        self.frbutip =tk.LabelFrame(self,bg='lightyellow',text="Tipos")
        self.frbutip.pack(side=tk.LEFT,fill=tk.Y)
        self.fredit= tk.Frame(self,bg="white")
        self.fredit.pack(side=tk.LEFT, fill=tk.Y, expand=1)
        self.freditbut= tk.Frame(self.fredit,bg='gray')
        #self.freditbut.pack()
        


        self.cb_idi=[] # lista de check but
        self.cb_tip = [] # lista de check but para tipos
        self.tipositio=tipositio
        self.sitio ={}
        self.muestra_but()
        self.muestra_edi()
        #self.mainloop()



    def muestra_but(self):
        for leng in range(1,1+len(enumeradores.Idiomas)):
            self.cb_idi.append(ttk.Checkbutton(self.frbutidi, name=str(leng) ,text=enumeradores.Idiomas(leng).name
            , command=self.cbclick))
            self.cb_idi[leng-1].state(['selected'])
            self.cb_idi[leng-1].grid(row=leng,column=0,sticky=tk.W+tk.E)
        for leng in range(1,1+len(enumeradores.TipoProyecto)):
            self.cb_tip.append(ttk.Checkbutton(self.frbutip, name=str(leng) ,text=enumeradores.TipoProyecto(leng).name
            , command=self.cbclick))
            self.cb_tip[leng-1].state(['!selected'])
            self.cb_tip[leng-1].grid(row=leng,column=0, sticky=tk.W+tk.E)
    
    def muestra_edi(self):
       self.sitio['nomsitio']= li.LabelInput(self.frbut,'Nombre del Sitio', input_var=tk.StringVar())
       self.sitio['nomsitio'].grid(row=0, column=1)
       self.sitio['url']= li.LabelInput(self.fredit,'Url', input_var=tk.StringVar())
       self.sitio['url'].grid(row=1, column=1)
       self.sitio['Pais']= li.LabelInput(self.fredit,"Pa√≠s de Origen",input_class=ttk.Combobox, input_var=tk.StringVar(),
                            input_args={"values": ["Argentina", "Australia", "USA","Francia", "Alemania"]})
       self.sitio['Pais'].grid(row=2,column=1)
       self.sitio['Niveles']=li.LabelInput(self.fredit,'Niveles de Membresia', input_var=tk.IntVar())
       self.sitio['Niveles'].grid(row=3,column=1)
       self.sitio['NivelAct']= li.LabelInput(self.fredit,"Nivel Actual",input_class=ttk.Combobox, input_var=tk.StringVar(),
                            input_args={"values": ["0", "1", "2","3", "4"]})
       self.sitio['NivelAct'].grid(row=4,column=1)
       self.sitio['UrlDash']=li.LabelInput(self.fredit,'Url del Dashboard', input_var=tk.StringVar())
       self.sitio['UrlDash'].grid(row=5,column=1)
       self.sitio['Notas']=li.LabelInput(self.fredit,'Notas', input_class=tk.Text,input_args={"height": 10,"width": 25})
       self.sitio['Notas'].grid(row=6,column=1)
       

        

    def cbclick(self):
        pass


if __name__ == '__main__':
    raiz = tk.Tk()
    b=Sitio(raiz,'',[],[],3)
    #b.muestra_but()
    raiz.mainloop()    